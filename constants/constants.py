from constants.category import *from constants.general_term import tm_list, we_list, ge_list, sf_list, of_listfrom constants.technical_term import pl_collection, ol_collection, lb_collection, fw_collection, ds_collection, \    dv_collection, ps_collection, os_collection, ap_collection, pf_collection, at_collection, tl_collection, \    sv_collection, cs_collection, pt_collection, ai_collection, pd_list, ql_listLABELS = [pl, lb, cs, fw, pt, ds, dv, we, os_, ap, pf, ps, ge, sf, tl, at, ol, ql, pd, sv, of, tm, se, ai]pl_list = [pl for pls in pl_collection.values() for pl in pls]ol_list = [ol for ols in ol_collection.values() for ol in ols]lb_list = [lb for lbs in lb_collection.values() for lb in lbs]fw_list = [fw for fws in fw_collection.values() for fw in fws]ds_list = [ds for dss in ds_collection.values() for ds in dss]dv_list = [dv for dvs in dv_collection.values() for dv in dvs]ps_list = [ps for pss in ps_collection.values() for ps in pss]os_list = [os for oss in os_collection.values() for os in oss]ap_list = [ap for aps in ap_collection.values() for ap in aps]pf_list = [pf for pfs in pf_collection.values() for pf in pfs]at_list = [at for pfs in at_collection.values() for at in pfs]tl_list = [tl for tls in tl_collection.values() for tl in tls]sv_list = [sv for svs in sv_collection.values() for sv in svs]cs_list = [cs for css in cs_collection.values() for cs in css]pt_list = [pt for pts in pt_collection.values() for pt in pts]ai_list = [ai for ais in ai_collection.values() for ai in ais]CONSTANTS_DICT = {'pl': pl_list, 'ol': ol_list, 'lb': lb_list, 'fw': fw_list, 'cs': cs_list, 'pt': pt_list, 'ds': ds_list,                  'dv': dv_list, 'ps': ps_list, 'ai': ai_list, 'os': os_list, 'ap': ap_list, 'pf': pf_list,                  'we': we_list, 'ge': ge_list, 'at': at_list, 'sf': sf_list, 'pd': pd_list, 'tl': tl_list, 'sv': sv_list,                  'ql': ql_list, 'of': of_list, 'tm': tm_list}if __name__ == '__main__':    for label in CONSTANTS_DICT.values():        print(sorted((label)))